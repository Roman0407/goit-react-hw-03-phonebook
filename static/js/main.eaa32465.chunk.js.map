{"version":3,"sources":["components/contacts/Contacts.styled.js","components/contacts/Contacts.jsx","components/GlobalStyle.styled.js","components/new-contact/NewContact.styled.js","components/new-contact/NewContact.jsx","components/App.jsx","index.js"],"names":["FilterForm","styled","form","ContactItem","li","DeleteButton","button","Filter","setFilter","style","display","flexDirection","marginBottom","onChange","type","pattern","ContactList","contacts","filter","deleteContact","contactsItems","length","item","name","toLowerCase","includes","paddingLeft","map","contact","marginRight","number","id","onClick","GlobalStyle","createGlobalStyle","ContactForm","NewContactForm","submitHandling","onSubmit","title","required","App","state","event","preventDefault","currentTarget","elements","value","setState","inpuText","targetId","prevState","localData","JSON","parse","localStorage","getItem","this","_","setItem","stringify","padding","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4PAEaA,EAAaC,IAAOC,KAAI,qIASxBC,EAAcF,IAAOG,GAAE,kFAKvBC,EAAeJ,IAAOK,OAAM,gL,OCb5BC,EAAS,SAAH,GAAuB,IAAjBC,EAAS,EAATA,UACrB,OACI,cAACR,EAAU,UACP,wBAAOS,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAAW,UACvD,sBAAMF,MAAO,CAAEG,aAAc,QAAS,SAAC,0BACvC,uBACIC,SAAUL,EACVM,KAAK,OACLC,QAAQ,+HAK5B,EAEaC,EAAc,SAAH,GAA6C,IAAvCC,EAAQ,EAARA,SAAUC,EAAM,EAANA,OAAQC,EAAa,EAAbA,cACxCC,EAAgB,GAGpB,OADMA,EADLF,EAAOG,OACcJ,EAASC,QAAO,SAAAI,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASP,EAAOM,cAAc,IADnEP,EAE1B,oBAAIR,MAAO,CAAEiB,YAAa,QAAS,SACrCN,EAAcO,KAAI,SAAAC,GACf,OAAO,eAACzB,EAAW,WACf,uBAAMM,MAAO,CAAEoB,YAAa,QAAS,UAChCD,EAAQL,KAAK,KAAGK,EAAQE,UAE7B,cAACzB,EAAY,CAACS,KAAK,SAASiB,GAAIH,EAAQG,GAAIC,QAASb,EAAc,SAAC,aAJ/CS,EAAQG,GAMrC,KAER,EC7BaE,G,MAAcC,YAAiB,geCD/BC,EAAclC,IAAOC,KAAI,slBCCzBkC,EAAiB,SAAH,GAA4B,IAAtBC,EAAc,EAAdA,eAC7B,OACI,mCACI,eAACF,EAAW,CAACG,SAAUD,EAAe,UAClC,kCACI,+BAAM,SACN,uBACIvB,KAAK,OACLS,KAAK,OACLR,QAAQ,yHACRwB,MAAM,yIACNC,UAAQ,OAGhB,kCACI,+BAAM,WACN,uBACI1B,KAAK,MACLS,KAAK,SACLR,QAAQ,yFACRwB,MAAM,+FACNC,UAAQ,OAGhB,wBAAQ1B,KAAK,SAAQ,SAAC,oBAItC,EC1Ba2B,EAAG,iKA4Db,OA5Da,oCACdC,MAAQ,CACNzB,SAAU,CACR,CAAEc,GAAI,OAAQR,KAAM,gBAAiBO,OAAQ,aAC7C,CAAEC,GAAI,OAAQR,KAAM,iBAAkBO,OAAQ,aAC9C,CAAEC,GAAI,OAAQR,KAAM,gBAAiBO,OAAQ,aAC7C,CAAEC,GAAI,OAAQR,KAAM,iBAAkBO,OAAQ,cAEhDZ,OAAQ,IACT,EA8BDmB,eAAiB,SAAAM,GACfA,EAAMC,iBACN,IAAMb,EAAK,EAAKW,MAAMzB,SAASI,OAAS,EAClCnB,EAAOyC,EAAME,cACbtB,EAAOrB,EAAK4C,SAASvB,KAAKwB,MAC1BjB,EAAS5B,EAAK4C,SAAShB,OAAOiB,MACpC,EAAKC,SAAS,2BACT,EAAKN,OAAK,IACbzB,SAAS,GAAD,mBACH,EAAKyB,MAAMzB,UAAQ,CACtB,CAAEc,GAAI,MAAQA,EAAIR,KAAMA,EAAMO,OAAQA,OAG5C,EAAC,EACDtB,UAAY,SAAAmC,GACV,IAAMM,EAAWN,EAAME,cAAcE,MACrC,EAAKC,SAAS,CAAE9B,OAAQ+B,GAC1B,EAAC,EACD9B,cAAgB,SAAAwB,GACd,IAAMO,EAAWP,EAAME,cAAcd,GACrC,EAAKiB,UAAS,SAAAG,GAAS,MAAK,CAAElC,SAAUkC,EAAUlC,SAASC,QAAO,SAAAI,GAAI,OAAIA,EAAKS,KAAOmB,CAAQ,IAAG,GACnG,EAAC,EAvBA,OAuBA,8CAjDD,WACE,IAAME,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,KAC9DJ,GAAWK,KAAKT,SAAS,CAAE/B,SAAUmC,GAC3C,GAAC,gCAED,SAAmBM,EAAGP,GAChBM,KAAKf,MAAMzB,WAAakC,EAAUlC,UACpCsC,aAAaI,QAAQ,WAAYN,KAAKO,UAAUH,KAAKf,MAAMzB,UAG/D,GAAC,oBAED,WACE,OACE,sBAAKR,MAAO,CAAEoD,QAAS,QAAS,UAC9B,cAAC5B,EAAW,IACZ,gCACE,oBAAIxB,MAAO,CAAEG,aAAc,QAAS,SAAC,cACrC,cAAC,EAAc,CAACyB,eAAgBoB,KAAKpB,iBAErC,oBAAI5B,MAAO,CAAEG,aAAc,QAAS,SAAC,aACrC,cAAC,EAAM,CAACJ,UAAWiD,KAAKjD,YACxB,cAAC,EAAW,CAACS,SAAUwC,KAAKf,MAAMzB,SAAUC,OAAQuC,KAAKf,MAAMxB,OAAQC,cAAesC,KAAKtC,qBAInG,KAAC,EArCa,CAAS2C,aCDzBC,IAASC,WAAWC,SAASC,eAAe,SAASC,OACnD,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,M","file":"static/js/main.eaa32465.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FilterForm = styled.form`\n  input {\n    padding: 5px;\n    border-radius: 5px;\n    margin-bottom: 20px;\n    width: 200px;\n  }\n`;\n\nexport const ContactItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\nexport const DeleteButton = styled.button`\n  padding: 0 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  border: none;\n  :hover {\n    border: 1px dashed gray;\n    cursor: pointer;\n  }\n`;\n","import { ContactItem, DeleteButton, FilterForm } from \"./Contacts.styled\"\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ setFilter }) => {\n    return (\n        <FilterForm>\n            <label style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <span style={{ marginBottom: \"10px\" }}>Find contacts by name</span>\n                <input\n                    onChange={setFilter}\n                    type=\"text\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                />\n            </label>\n        </FilterForm>\n    )\n}\n\nexport const ContactList = ({ contacts, filter, deleteContact }) => {\n    let contactsItems = [];\n    !filter.length ? contactsItems = contacts\n        : contactsItems = contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()));\n    return <ul style={{ paddingLeft: \"30px\" }}>\n        {contactsItems.map(contact => {\n            return <ContactItem key={contact.id}>\n                <span style={{ marginRight: \"10px\" }}>\n                    {contact.name}: {contact.number}\n                </span>\n                <DeleteButton type=\"button\" id={contact.id} onClick={deleteContact}>Delete</DeleteButton>\n            </ContactItem>\n        })}\n    </ul>\n}\n\nFilter.propTypes = {\n    setFilter: PropTypes.func.isRequired,\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    filter: PropTypes.string,\n    deleteContact: PropTypes.func.isRequired,\n}\n","import '@csstools/normalize.css';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\nul{\n  padding: 0;\n  margin: 0;\n}\nh1,\nh2,\nh3,\np {\n  margin: 0;\n}\n`;\n","import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  height: 200px;\n  border: 1px solid black;\n  margin-bottom: 20px;\n  label {\n    display: flex;\n    flex-direction: column;\n    width: 150px;\n  }\n  label:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  span {\n    margin-bottom: 10px;\n  }\n  input {\n    padding: 5px;\n    border-radius: 5px;\n  }\n  button {\n    padding: 5px;\n    width: 100px;\n    border-radius: 5px;\n    border: none;\n    :hover {\n      border: 1px dashed gray;\n      cursor: pointer;\n    }\n  }\n`;\n","import { ContactForm } from \"./NewContact.styled\"\nimport PropTypes from 'prop-types';\n\nexport const NewContactForm = ({ submitHandling }) => {\n    return (\n        <>\n            <ContactForm onSubmit={submitHandling}>\n                <label>\n                    <span>Name</span>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                <label>\n                    <span>Number</span>\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n                <button type=\"submit\">Add contact</button>\n            </ContactForm>\n        </>\n    )\n}\n\n\nNewContactForm.propTypes = {\n    submitHandling: PropTypes.func.isRequired,\n}","import { Component } from \"react\";\nimport { ContactList, Filter } from \"./contacts/Contacts\";\nimport { GlobalStyle } from \"./GlobalStyle.styled\";\nimport { NewContactForm } from \"./new-contact/NewContact\";\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const localData = JSON.parse(localStorage.getItem('contacts')) || null;\n    if (localData) this.setState({ contacts: localData });\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n\n  }\n\n  render() {\n    return (\n      <div style={{ padding: \"20px\" }}>\n        <GlobalStyle />\n        <div>\n          <h1 style={{ marginBottom: \"20px\" }}>Phonebook</h1>\n          <NewContactForm submitHandling={this.submitHandling} />\n\n          <h2 style={{ marginBottom: \"10px\" }}>Contacts</h2>\n          <Filter setFilter={this.setFilter} />\n          <ContactList contacts={this.state.contacts} filter={this.state.filter} deleteContact={this.deleteContact} />\n        </div>\n      </div>\n    )\n  }\n\n  submitHandling = event => {\n    event.preventDefault();\n    const id = this.state.contacts.length + 1;\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    this.setState({\n      ...this.state,\n      contacts: [\n        ...this.state.contacts,\n        { id: 'id-' + id, name: name, number: number },\n      ],\n    });\n  }\n  setFilter = event => {\n    const inpuText = event.currentTarget.value;\n    this.setState({ filter: inpuText });\n  }\n  deleteContact = event => {\n    const targetId = event.currentTarget.id;\n    this.setState(prevState => ({ contacts: prevState.contacts.filter(item => item.id !== targetId) }))\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from 'components/App';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}